{"version":3,"sources":["pages/Home.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","utils/queries.js","utils/helpers.js","components/Dashboard/index.js","components/Project/index.js","components/AllProjects/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","Jumbotron","className","fluid","Container","role","aria-label","LOGIN","gql","ADD_USER","ADD_PROJECT","DELETE_PROJECT","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","data","Auth","console","log","handleChange","target","name","value","to","onSubmit","htmlFor","placeholder","type","id","onChange","Signup","addUser","firstName","lastName","Nav","loggedIn","href","onClick","logout","ME","ALL_PROJECTS","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","DashboardForm","title","ideasText","project","setProjectInfo","errorText","setErrorText","update","cache","addProject","proj","readQuery","query","writeQuery","me","projects","length","handleSubmit","forEach","saveRecord","data-testid","rows","claseName","Project","useQuery","loading","deleteProject","userData","handleDeleteProject","reload","useEffect","getProjects","projectCount","map","my","Accordion","key","defaultActiveKey","Card","Toggle","as","Header","eventKey","date","Collapse","Body","Button","variant","width","height","viewBox","class","fill","xmlns","d","fill-rule","AllProject","users","ButtonToolbar","ButtonGroup","client","ApolloClient","operation","setContext","headers","authorization","uri","App","exact","path","component","AllProjects","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2dec81d8.chunk.js","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\n// import ProductList from \"../components/ProductList\";\n// import CategoryMenu from \"../components/CategoryMenu\";\n// import Cart from \"../components/Cart\";\n// import DashboardForm from \"../components/Dashboard\" \n\nconst Home = () => {\n  return (\n    <Jumbotron className=\"Jumbotron\" fluid>\n      <Container>\n        <h1 className=\"title-home\"><span role=\"img\" aria-label=\"shopping bag\">📝</span>Words Projects</h1><br></br>\n        <h2 className=\"title\">Welcome</h2><br></br>\n          <p className=\"paragraph\"><em>\n            This is a modified jumbotron that occupies the entire horizontal space of\n            its parent.\n          </em>\n          </p>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default Home;\n","import gql from \"graphql-tag\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        firstName\n        lastName\n        email\n        projects {\n          title\n        }\n        projectCount\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        firstName\n        _id\n        lastName\n        email\n        projects {\n          title\n        }\n        projectCount\n      }\n    }\n  }\n`;\n\nexport const ADD_PROJECT = gql`\n  mutation addProject($project: projectInput) {\n    addProject(project: $project) {\n      projects {\n        _id\n        title\n        ideasText\n        date\n      }\n    }\n  }\n`;\n\nexport const DELETE_PROJECT = gql`\n  mutation deleteProject($_id: ID) {\n    deleteProject(_id: $_id) {\n      _id\n    }\n  }\n`;\n\nexport const EDIT_PROJECT = gql`\n  mutation editProject($project: projectInput) {\n    editProject(project: $project) {\n      _id\n      projects {\n        title\n        ideasText\n        date\n      }\n    }\n  }\n`;\nexport const ADD_BULK_PROJECT = gql`\n  mutation addBulkProject($project: [projectInput]) {\n    addBulkProject(project: $project) {\n      projects {\n        title\n        ideasText\n        date\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">\n        ← Go to Signup\n      </Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {\n          error ? <div>\n            <p className=\"error-text\" >The provided credentials are incorrect</p>\n          </div> : null\n        }\n        <div className=\"flex-row flex-end\">\n          <button className=\"btn2\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        firstName: formState.firstName, lastName: formState.lastName\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">\n        ← Go to Login\n      </Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button className=\"btn2\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/AllProjects\">\n              All Projects\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/MyProject\">\n              My Projects\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/Dashboard\">\n              Dashboard\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row2\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-12\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">📝</span>\n          Words Projects\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import gql from 'graphql-tag';\n\nexport const QUERY_USER = gql`\n  query ($firstName: String!) {\n    user(firstName: $firstName) {\n          firstName\n          lastName\t\t\t\t       \n          projects {\n             title\n             ideasText\n             date\n          }\n      projectCount\n    }\n  }\n`;\n\nexport const ME = gql`\n{\nme{  \n  _id\n  firstName\n  lastName   \n  projects{\n    _id\n    title\n    ideasText\n    date      \n  }\n   projectCount     \n }\n}\n`;\n\nexport const ALL_PROJECTS=gql`\n{\n  users{  \n    _id\n    firstName\n    lastName   \n    projects{\n      _id\n      title\n      ideasText\n      date      \n    }\n     projectCount     \n  }\n}\n`;\n","export function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open(\"WordsPorjectsDB\", 1);\n    let db, tx, store;\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      db.createObjectStore(\"projects\", { keyPath: \"_id\" });\n    };\n\n    request.onerror = function (e) {\n      console.log(\"There was an error\");\n    };\n\n    request.onsuccess = function (e) {\n      db = request.result;\n      tx = db.transaction(storeName, \"readwrite\");\n      store = tx.objectStore(storeName);\n\n      db.onerror = function (e) {\n        console.log(\"error\", e);\n      };\n\n      switch (method) {\n        case \"put\":\n          store.put(object);\n          resolve(object);\n          break;\n        case \"get\":\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n          break;\n        case \"delete\":\n          store.delete(object._id);\n          break;\n        default:\n          console.log(\"No valid method\");\n          break;\n      }\n\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}\n","import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { ADD_PROJECT } from \"../../utils/mutations\";\nimport { ME } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction DashboardForm() {\n  const [project, setProjectInfo] = useState({ title: \"\", ideasText: \"\" });\n  const { title, ideasText } = project;\n\n  const [errorText, setErrorText] = useState(\"\");\n\n  const [addProject, { error }] = useMutation(ADD_PROJECT, {\n    update(cache, { data: { addProject } }) {\n      try {\n        // could potentially not exist yet, so wrap in a try...catch\n        const { proj } = cache.readQuery({ query: ME });\n        cache.writeQuery({\n          query: ME,\n          data: { proj: [addProject, ...proj] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache, appending new thought to the end of the array\n      const { me } = cache.readQuery({ query: ME });\n      cache.writeQuery({\n        query: ME,\n        data: { me: { ...me, projects: [...me.projects, addProject] } },\n      });\n    },\n  });\n\n  function handleChange(e) {\n    if (!e.target.value.length) {\n      setErrorText(`${e.target.name} is required.`);\n    } else {\n      setErrorText(\"\");\n    }\n    if (!errorText) {\n      setProjectInfo({ ...project, [e.target.name]: e.target.value });\n    }\n  }\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"projects data\", project);\n    try {\n      let { data } = await addProject({\n        variables: { project },\n      });\n      data.addProject.projects.forEach((project) => {\n        idbPromise(\"projects\", \"put\", project);\n      });\n      setProjectInfo({ title: \"\", ideasText: \"\" });\n    } catch (e) {\n      window.saveRecord(project);\n      console.error(e);\n      idbPromise(\"projects\", \"put\", project);\n    }\n\n    //\n  };\n  return (\n    <section>\n      <h1 className=\"title\" data-testid=\"h1tag\">\n        Project Detail\n      </h1>\n      <form className=\"card-d\" id=\"contact-form\" onSubmit={handleSubmit}>\n        <div>\n          <label className=\"LabelDasgboard\" htmlFor=\"name\">\n            Project Name:\n          </label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label className=\"LabelDasgboard\" htmlFor=\"textArea\">\n            Text Area:\n          </label>\n          <textarea\n            name=\"ideasText\"\n            rows=\"5\"\n            value={ideasText}\n            onChange={handleChange}\n          />\n        </div>\n        {errorText && (\n          <div>\n            <p className=\"error-text\">{errorText}</p>\n          </div>\n        )}\n        <div>\n          <br></br>\n          <button claseName=\"btn\" data-testid=\"btntag\" type=\"submit\">\n            Submit\n          </button>\n\n        </div>\n      </form>\n    </section>\n  );\n}\nexport default DashboardForm;\n","import Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useEffect } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { ME } from \"../../utils/queries\";\nimport { DELETE_PROJECT } from \"../../utils/mutations\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction Project() {\n  const { loading, data } = useQuery(ME);\n\n  const [deleteProject] = useMutation(DELETE_PROJECT);\n\n  const userData = data?.me || {};\n\n  const handleDeleteProject = async (_id) => {\n  \n    console.log(\"ID to delete\", _id);\n\n    try {\n      await deleteProject({ variables: { _id } });\n      window.location.reload();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  console.log(\"Query user\", userData.projects);\n\n  if (!loading) {\n    console.log(userData);\n  }\n  useEffect(() => {\n    async function getProjects() {\n      const projects = await idbPromise(\"projects\", \"get\");\n      userData.projects = projects;\n    }\n    if (!userData?.projects?.length) {\n      getProjects();\n    }\n  }, []);\n\n  return (\n    <>\n      <h5>\n        {userData?.firstName} {userData?.lastName} have {userData?.projectCount}{\" \"}\n        project(s)\n      </h5>\n      {!loading\n        ? userData?.projects.map((my) => {\n            return (\n              <div className=\"Project\">\n                <Accordion key={my._id} defaultActiveKey=\"0\">\n                  <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                      <h3>\n                        {my.title}\n                        <br></br>\n                        <h6>{my.date}</h6>\n                      </h3>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                      <Card.Body>\n                        <p>{my.ideasText}</p>\n                        <br />\n                        <Button\n                          variant=\"outline-success\"\n                          onClick={() => handleDeleteProject(my._id)}\n                        >\n                          <svg\n                            width=\"1em\"\n                            height=\"1em\"\n                            viewBox=\"0 0 16 16\"\n                            class=\"bi bi-trash\"\n                            fill=\"currentColor\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                          >\n                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                            <path\n                              fill-rule=\"evenodd\"\n                              d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n                            />\n                          </svg>\n                          Delete\n                        </Button>\n                      </Card.Body>\n                    </Accordion.Collapse>\n                  </Card>\n                </Accordion>\n              </div>\n            );\n          })\n        : \"\"}\n    </>\n  );\n}\n\nexport default Project;\n","import React, { Component } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { ALL_PROJECTS, QUERY_USER } from \"../../utils/queries\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\n\n\nexport default function AllProject() {\n  const { loading, data } = useQuery(ALL_PROJECTS);\n  const userData = data?.users || {};\n  // console.log(\"Query user\", data.projects);\n  if (!loading) {\n    console.log('All project2', userData);\n    console.log('All project', userData[0].projects[0].title);\n  }\n  return !loading\n    ? (userData || []).map(userData => (\n      <div className=\"Projects\">\n        {/* <h2>Projects</h2> */}\n        <Accordion key={userData?._id} defaultActiveKey=\"0\">\n          { userData?.projects?.map(project => (\n            <Card key={project?._id}>\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                <h3><strong>{project?.title}</strong>\n                  <h6>By: {userData.firstName} {userData.lastName}</h6>\n                </h3>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <p>{project?.ideasText}</p><br />\n                  <h4>Donation!</h4>\n                  <ButtonToolbar aria-label=\"Toolbar with button groups\">\n                    <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\n                      <Button variant=\"outline-success\">$ 10.00</Button>\n                    </ButtonGroup>\n                    <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\n                      <Button variant=\"outline-success\">$ 20.00</Button>\n                    </ButtonGroup>\n                    <ButtonGroup aria-label=\"Third group\">\n                      <Button variant=\"outline-success\">$ 50.00</Button>\n                    </ButtonGroup>\n                  </ButtonToolbar>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          ))}\n        </Accordion>\n      </div>\n    ))\n    : \"\";\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\nimport Home from \"./pages/Home\";\n// import Detail from \"./pages/Detail\";\n// import NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport DashboardForm from \"./components/Dashboard\";\n// import { StoreProvider } from \"./utils/GlobalState\";\n// import Success from \"./pages/Success\";\n// import OrderHistory from \"./pages/OrderHistory\";\nimport Project from \"./components/Project\";\nimport AllProjects from \"./components/AllProjects\";\n\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql',\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          {/* <StoreProvider>*/}\n          <Nav />\n          {<Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/Dashboard\" component={DashboardForm} />\n            <Route exact path=\"/MyProject\" component={Project} />\n            <div>\n              <h2 className=\"title\">Projects</h2>\n              <Route exact path=\"/AllProjects\" component={AllProjects} />\n            </div>\n          </Switch>}\n          {/* </StoreProvider> */}\n        </div>\n      </Router>\n    </ApolloProvider>\n    \n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}